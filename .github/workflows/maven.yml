# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Inventory CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  commit:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0  # Use MySQL 8.0
        env:
          MYSQL_DATABASE: Inventory  # Create a database named Inventory
          MYSQL_ROOT_PASSWORD: new_password  # Root password
        ports:
          - 3306:3306  # Expose MySQL port
        options: >-
          --health-cmd "mysqladmin ping -h localhost" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e 'select 1'; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
      - name: Unittest Maven
        run: mvn clean -Dtest=com.stores.Inventory.Unittest.*Test test

  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0  # Use MySQL 8.0
        env:
          MYSQL_DATABASE: Inventory  # Create a database named Inventory
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}  # Root password
        ports:
          - 3306:3306  # Expose MySQL port
        options: >-
          --health-cmd "mysqladmin ping -h localhost" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: sanelevilakazi/stores-inventory
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
